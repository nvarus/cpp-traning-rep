/**
 * Разработайте структуру по имени car, которая будет хранить следующую информацию об автомобиле: название производителя в виде строки в символьном массиве
 * или в объекте string, а также год выпуска автомобиля в виде целого числа. Напишите программу, которая запросит пользователя, сколько автомобилей необходимо
 * включить в каталог. Затем программа должна применить new для создания динамического массива структур car указанного пользователем размера. Далее она должна 
 * пригласить пользователя ввести название производителя и год выпуска для наполнения данными каждой структуры в массиве (см, главу 4). И, наконец, она должна
 * отобразить содержимое каждой структуры.
 * Пример запуска программы должен выглядеть подобно следующему:
 *     > Сколько автомобилей поместить в каталог? 2 
 *     > Автомобиль #1:
 *     > Введите производителя: Hudson Hornet
 *     > Укажите год выпуска: 1952
 *     > Автомобиль #2:
 *     > Введите производителя: Kaiser
 *     > Укажите год выпуска: 1951
 *     > Вот ваша коллекция:
 *     > 1952 Hudson Hornet 1951 Kaiser
 */

#include<iostream>
#include<string>

struct car 
{
    std::string Name;
    int Year;
};

int main(void)
{
    using namespace std;
    int Number;
    cout << "Сколько автомобилей включить в каталог: ";     // запрашиваем у пользователя кол-во автомобилей,
    cin >> Number;                                          // это будет размер массива структур
    cin.get();               

    car *Catalog = new car[Number];         // указатель на struct car
    
    // цикл для ввода данных
    for (int i = 0; i < Number; i++)
    {
        cout    << "Автомобиль #" << i + 1 << ":\n"
                << "Введите производителя: ";
        getline(cin,Catalog[i].Name);
        cout << "Укажите год выпуска: ";
        cin >> Catalog[i].Year;
        cin.get();
    }
    cout << "Вот ваша коллекция:\n";

    // цикл для вывода на экран
    for (int i = 0; i < Number; i++)
            cout << Catalog[i].Year << "\t" << Catalog[i].Name << endl;
    
        delete[] Catalog;
}